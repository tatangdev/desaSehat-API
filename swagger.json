{
  "swagger": "2.0",
  "info": {
    "description": "Built by team C",
    "version": "1.0.0",
    "title": "Desa Sehat",
    "contact": {
      "email": "romadhonatatang@gmail.com"
    }
  },
  "host": "",
  "basePath": "/api",
  "tags": [
    {
      "name": "User Collection",
      "description": "Info for users API"
    },
    {
      "name": "Campaign Collection",
      "description": "Info for campaigns API"
    }
  ],
  "paths": {
    "/user/": {
      "post": {
        "tags": [
          "User Collection"
        ],
        "summary": "create new user",
        "description": "Create a new user, the first created user is superuser",
        "operationId": "createUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "user created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "ERROR",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string"
                },
                "errors": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User Collection"
        ],
        "summary": "Update user profile",
        "description": "",
        "operationId": "updateProfile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateProfile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "profile updated",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "ERROR",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string"
                },
                "errors": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "User Collection"
        ],
        "summary": "Get user data",
        "description": "",
        "operationId": "userProfile",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "ERROR",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string"
                },
                "errors": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "User Collection"
        ],
        "summary": "Delete current user",
        "description": "To delete the user by user's token",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "ERROR",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string"
                },
                "errors": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/user/activation/{token}": {
      "get": {
        "tags": [
          "User Collection"
        ],
        "summary": "Activate user",
        "description": "",
        "operationId": "activateUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "token of user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "user created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "ERROR",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string"
                },
                "errors": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/user/auth": {
      "post": {
        "tags": [
          "User Collection"
        ],
        "summary": "Login user",
        "description": "",
        "operationId": "loginUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loginUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "ERROR",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string"
                },
                "errors": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/user/forgotPassword": {
      "post": {
        "tags": [
          "User Collection"
        ],
        "summary": "request token to reset password",
        "description": "",
        "operationId": "forgotPassword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/forgotPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "if the email registered, we will sent you email",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "ERROR",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string"
                },
                "errors": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/user/resetPassword/{token}": {
      "put": {
        "tags": [
          "User Collection"
        ],
        "summary": "change password",
        "description": "",
        "operationId": "resetPassword",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "token of user",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resetPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "password changed",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "ERROR",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string"
                },
                "errors": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/user/updateImage": {
      "put": {
        "tags": [
          "User Collection"
        ],
        "summary": "change picture profile",
        "description": "pick an image to upload as profile picture",
        "operationId": "uploadFile",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "image",
            "in": "formData",
            "description": "file to upload",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "ERROR",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string"
                },
                "errors": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user/allUser": {
      "get": {
        "tags": [
          "User Collection"
        ],
        "summary": "Get all users",
        "description": "show the list of all users - only superuser and admin could perform this action",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "ERROR",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string"
                },
                "errors": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/user/role/{_id}": {
      "put": {
        "tags": [
          "User Collection"
        ],
        "summary": "update user's role",
        "description": "update user role to admin, only superuser could perform this action",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "description": "fill the chosen user id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/updateRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully change role"
          },
          "422": {
            "description": "Could not update role"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/campaign/": {
      "post": {
        "tags": [
          "Campaign Collection"
        ],
        "summary": "create new campaign",
        "description": "Ask user for campaign's details in order to make a campaign",
        "operationId": "createCampaign",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "image",
            "in": "formData",
            "description": "ask user for the picture of the patient",
            "required": true,
            "type": "file"
          },
          {
            "name": "address",
            "in": "formData",
            "description": "ask user for address of the patient",
            "required": true,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "ask user for the title of the campaign",
            "required": true,
            "type": "string"
          },
          {
            "name": "patient_name",
            "in": "formData",
            "description": "ask user for the name of the patient",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "ask user for the description of the campaign",
            "required": true,
            "type": "string"
          },
          {
            "name": "total_fund",
            "in": "formData",
            "description": "ask user for how much the fund needed",
            "required": true,
            "type": "number"
          },
          {
            "name": "disease_category",
            "in": "formData",
            "description": "ask user for the category of disease",
            "enum": [
              "Asthma",
              "Diarrhea",
              "Diabetes Mellitus",
              "Dengue Fever",
              "Poor Nutrition",
              "Hypertension",
              "Coronary Heart Disease",
              "Malaria",
              "Stroke",
              "Tuberculosis",
              "Covid19",
              "Dental Health Problem"
            ],
            "required": true,
            "type": "string"
          },
          {
            "name": "due_date",
            "in": "formData",
            "description": "ask user for the deadline of the campaign",
            "required": true,
            "type": "date"
          },
          {
            "name": "gender",
            "in": "formData",
            "description": "ask user for the gender of the patient",
            "enum": [
              "Male",
              "Female"
            ],
            "required": true,
            "type": "string"
          },
          {
            "name": "blood_type",
            "in": "formData",
            "description": "ask user for the blood type of the patient",
            "enum": [
              "A",
              "B",
              "AB",
              "O"
            ],
            "required": true,
            "type": "string"
          },
          {
            "name": "birth_place",
            "in": "formData",
            "description": "ask user for the birth place of the patient",
            "required": true,
            "type": "string"
          },
          {
            "name": "date_of_birth",
            "in": "formData",
            "description": "ask user for the birthdate of the patient",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "ERROR",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string"
                },
                "errors": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "get": {
        "tags": [
          "Campaign Collection"
        ],
        "summary": "Get all campaigns",
        "description": "show all the campaigns",
        "operationId": "getCampaign",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "ERROR",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string"
                },
                "errors": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/campaign/{campaign_id}/": {
      "get": {
        "tags": [
          "Campaign Collection"
        ],
        "summary": "Get campaign details by campaign id",
        "description": "show details of the campaign based by campaign id",
        "operationId": "campaignDetails",
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "insert the campaign id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "ERROR",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string"
                },
                "errors": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Campaign Collection"
        ],
        "summary": "update campaign",
        "description": "update selected campaign based by the campaign id",
        "operationId": "updateCampaign",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "insert the campaign id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "You can update even if only one parameter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateCampaign"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "ERROR",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string"
                },
                "errors": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Campaign Collection"
        ],
        "summary": "delete campaign",
        "description": "delete the selected campaign based by campaign id",
        "operationId": "deleteCampaign",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "insert the selected campaign id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "deleted",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "ERROR",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string"
                },
                "errors": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/campaign/verify/{campaign_id}/": {
      "put": {
        "tags": [
          "Campaign Collection"
        ],
        "summary": "verify campaign",
        "description": "verify selected campaign based by the campaign id (only superuser and admin could perform this action!)",
        "operationId": "verifyCampaign",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "description": "insert the campaign id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "You can update even if only one parameter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/verifyCampaign"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "ERROR",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string"
                },
                "errors": {
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "Authorization": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "createUser": {
      "type": "object",
      "required": [
        "full_name",
        "email",
        "password",
        "password_confirmation",
        "gender",
        "address"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "Tatang Romadhona"
        },
        "email": {
          "type": "string",
          "example": "romadhonatatang@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "aandeani"
        },
        "password_confirmation": {
          "type": "string",
          "example": "aandeani"
        },
        "gender": {
          "type": "string",
          "example": "Male or Female"
        },
        "address": {
          "type": "string",
          "example": "batam"
        }
      }
    },
    "loginUser": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "romadhonatatang@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "aandeani"
        }
      }
    },
    "forgotPassword": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "romadhonatatang@gmail.com"
        }
      }
    },
    "resetPassword": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "password": {
          "type": "string",
          "example": "aandeani"
        },
        "password_confirmation": {
          "type": "string",
          "example": "aandeani"
        }
      }
    },
    "updateProfile": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "Tatang Romadhona"
        }
      }
    },
    "updateRole": {
      "type": "object",
      "required": [
        "role"
      ],
      "properties": {
        "role": {
          "type": "string",
          "example": "admin"
        }
      }
    },
    "createCampaign": {
      "type": "object",
      "required": [
        "image",
        "address",
        "title",
        "patient_name",
        "description",
        "total_fund",
        "disease_category",
        "due_date",
        "gender",
        "blood_type",
        "birth_place",
        "date_of_birth"
      ],
      "properties": {
        "image": {
          "type": "file"
        },
        "address": {
          "type": "string",
          "example": "the patient's address"
        },
        "title": {
          "type": "string",
          "example": "the campaign's title"
        },
        "patient_name": {
          "type": "string",
          "example": "the patient's name"
        },
        "description": {
          "type": "string",
          "example": "the campaign's description"
        },
        "total_fund": {
          "type": "number",
          "example": 1000000
        },
        "disease_category": {
          "type": "string",
          "enum": [
            "Asthma",
            "Diarrhea",
            "Diabetes Mellitus",
            "Dengue Fever",
            "Poor Nutrition",
            "Hypertension",
            "Coronary Heart Disease",
            "Malaria",
            "Stroke",
            "Tuberculosis",
            "Covid19",
            "Dental Health Problem"
          ]
        },
        "due_date": {
          "type": "date"
        },
        "gender": {
          "type": "string",
          "enum": [
            "Male",
            "Female"
          ]
        },
        "blood_type": {
          "type": "string",
          "enum": [
            "A",
            "B",
            "AB",
            "O"
          ]
        },
        "birth_place": {
          "type": "date"
        },
        "date_of_birth": {
          "type": "date"
        }
      }
    },
    "updateCampaign": {
      "type": "object",
      "properties": {
        "image": {
          "type": "file"
        },
        "address": {
          "type": "string",
          "example": "the patient's address"
        },
        "title": {
          "type": "string",
          "example": "the campaign's title"
        },
        "patient_name": {
          "type": "string",
          "example": "the patient's name"
        },
        "description": {
          "type": "string",
          "example": "the campaign's description"
        },
        "total_fund": {
          "type": "number",
          "example": 1000000
        },
        "disease_category": {
          "type": "string",
          "enum": [
            "Asthma",
            "Diarrhea",
            "Diabetes Mellitus",
            "Dengue Fever",
            "Poor Nutrition",
            "Hypertension",
            "Coronary Heart Disease",
            "Malaria",
            "Stroke",
            "Tuberculosis",
            "Covid19",
            "Dental Health Problem"
          ]
        },
        "due_date": {
          "type": "date"
        },
        "gender": {
          "type": "string",
          "enum": [
            "Male",
            "Female"
          ]
        },
        "blood_type": {
          "type": "string",
          "enum": [
            "A",
            "B",
            "AB",
            "O"
          ]
        },
        "birth_place": {
          "type": "date"
        },
        "date_of_birth": {
          "type": "date"
        }
      }
    },
    "verifyCampaign": {
      "type": "object",
      "required": [
        "verify"
      ],
      "properties": {
        "verify": {
          "type": "boolean",
          "example": true
        }
      }
    }
  },
  "externalDocs": {
    "description": "Backend repository",
    "url": "https://gitlab.com/romadhonatatang/miniproject-2"
  }
}